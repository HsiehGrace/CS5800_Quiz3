@startuml

class User implements PropertyChangeListener{
    -String userId
    -String userName
    -String password_hashed
    -String email
    -String dateOfBirth
    -int subscriberCount
    -ArrayList<String> subscribedChannelIds
    -ArrayList<String> uploadedVideoIds
    -ArrayList<String> watchHistoryVideoIds

    +void logIn()
    +void logOut()
    +Video uploadVideo()
    +void deleteVideo(String videoId)
    +void propertyChange(PropertyChangeEvent event)
    +void toggleSubscriptionTo(String userId)
    +void announceVideo(String videoId)
    +void addWatchHistory(String videoId)
    +void clearWatchHistory()
}

class Video{
    -String videoId
    -String videoCreatorId
    -String title
    -String description
    -double videoLength
    -String thumbnail_filePath
    -String video_filePath
    -ArrayList<String> tags
    -int viewCount
    -int likeCount
    -int dislikeCount
    -ArrayList<Comments>comments

    +int getViewCount()
    +int getLikeCount()
    +int getDislikeCount()
    +void addView()
    +void addLike()
    +void removeLike()
    +void addDislike()
    +void removeDislike()
    +void addComment(User user, String comment)
}

class VideoBuilder <<Builder>>{
    -String videoName
    -String thumbnail_filePath
    -String video_filePath
    +void setVideoName()
    +void setThumbnailFile()
    +void setVideoFile()
    +Video createVideo()
}

class YouTubeDatabaseProxy {
    ArrayList<User> userCache
    ArrayList<Video> videoCache

    ArrayList<Video> getVideosByTitle(String title)
    ArrayList<Video> getVideosByUserSubscriptions(String userId)
}

class VideoPlayer{
    -String videoId
    -int volume
    -double currTimestamp
    -VideoState state

    +void play()
    +void pause()
    +void fastForward()
    +void rewind()
    +void setVolume(int newVolume)
    +void setCurrTimeStamp(double newTimeStamp)
}

interface VideoState {
    +void play()
    +void pause()
}

class PlayState implements VideoState {
    +void play()
    +void pause()
}

class PauseState implements VideoState {
    +void play()
    +void pause()
}

class YouTubeWebClient {
    +WebPage currentPage
    +User currentUser
    +VideoPlayer videoPlayer
    +Video currentVideo
    +void selectCurrentVideo()
}

interface WebPage {
    +void returnHome()
    +void searchBar()
    +void menuBar()
    +Video selectVideo()
}

class ChannelPage implements WebPage{
    -String pageFilePath
    -ArrayList<Video> uploadedVideos
    -int subscriberCount
    +String subscribe()
    +void unsubscribe()
}

class Channel_AdminPage implements WebPage{
    -VideoFactory videoFactory
    +void createVideo()
    +void modifyVideo()
    +String getStatistics()
}

class HomePage implements WebPage{
    -String searchBar
    -String[] categoryList
    -Video[] VideoList
    +void videoCollection()
    +void chooseVideo()
    +String getSearchBar()
    +String chooseCategory()
    +String selectedVideo()
}

Video --o VideoPlayer

HomePage --o Video

User -- HomePage

YouTubeDatabaseProxy o-- User
YouTubeDatabaseProxy o-- Video
YouTubeDatabaseProxy -- YouTubeWebClient

YouTubeWebClient o-- VideoPlayer

VideoState --> VideoPlayer::state
WebPage --> YouTubeWebClient::currentPage

ChannelPage o-- VideoBuilder
ChannelPage o-- Video

@enduml